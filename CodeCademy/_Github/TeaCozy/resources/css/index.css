body {
    font-family: Helvetica, Arial, Sans-Serif;
    font-size: 22px;
    background-color: black;
    padding-top: 63px;
}
h2, h3, h4, h5, p, a {
    color: seashell;
    opacity: 0.9;
}
h2 { 
    line-height: 1;
    margin-bottom: 15px;
    text-align: center;
    /* - Use a `font-weight` property on `h2`, `h3`, `h4`, etc., to create better visual hierarchy. */
}
h3 {
    text-align: center;
}

h4 {
    line-height: 1.5;
    margin-top: 10px;
    text-align: center;
}
h5 {
    text-align: center;
}

p {
    text-align: center;
}

/*  4. **General Spacing and Text**:
    - Try using `rem` or `em` units for margins and padding instead of pixels to ensure the layout scales better with different font sizes and screen sizes.
    - Use a `font-weight` property on `h2`, `h3`, `h4`, etc., to create better visual hierarchy. */

/*----------  NAVIGATION BAR  ---------- */
.navigation-bar {
    width: 100%;
    display: inline-flex;
    border-bottom: 1px solid seashell;
    position: fixed;
    top: 0;
    background-color: black;
    z-index: 1;
}
.logo {
    height: 50px;
    padding: 10px;
    margin-right: auto;
    opacity: 0.9;
}
.navigation-bar ul {
    list-style-type: none;
    display: inline-flex;
    flex-wrap: wrap; /* Ensures the list wraps on smaller screens */
    padding-right: 20px; /* Good for spacing, but consider padding-left for better symmetry */
}
.navigation-bar li a {
    padding-right: 10px; /* Nice spacing, but consider padding-left for even padding on both sides */
}

/* 2. 
    - Consider using a media query to adjust the height of the hero on smaller screens to improve responsiveness. Currently, it might be too tall on mobile.
    - Use `background-size: cover;` to ensure the image scales appropriately on different screen sizes. */
/*----------  HERO  ---------- */
.hero {
    background-image: url(/resources/images/img-mission-background.jpg);
    background-color: gray; /* Fallback color, good practice */
    background-size: cover; 
    height: 700px;
    max-width: 1200px;
    margin: 0 auto 80px auto;
    display: flex;
    align-items: center;
}

.hero-text {
    text-align: center;
    background-color: black;
    width: 100%;
    padding: 10px;
}

/* 3. **Images in the "Tea of the Month" Section**:
    - Adding `object-fit: cover;` to the images would ensure they don't get distorted while maintaining the aspect ratio.
    - Replace `inline-flex` with `flex` in `.container` for better cross-browser support. */
/*----------  TEA OF THE MONTH  ---------- */
.tea-month {
    max-width: 1000px;
    margin: 0 auto 80px auto; /* Consider using shorthand: margin: 0 auto 80px; */
}
.tea-month-header {
    width: 100%;
    padding: 10px;
}
.container {
    display: inline-flex; /* Consider switching to flex for better alignment on smaller screens */
    flex-wrap: wrap;
    justify-content: center;    
}
.photos {
    margin: 10px
}
.photos img {
    height: 200px;
    width: 300px;
    margin-bottom: 0;
}

/*----------  LOCATIONS  ---------- */
.section-locations {
    width: 100%;
    min-height: 500px;
    padding: 40px 20px;
    background-image: url('/resources/images/img-locations-background.jpg');
    background-size: cover;
    background-position: center;
    margin-bottom: 80px;
}

.locations-container {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: 20px;
}
.location {
    background-color: black;
    padding: 20px;
    width: 300px;
    text-align: center;
}
.contact {
    padding: 20px;
    height: 200px;
}

/* 5. **Footer**:
    - Consider wrapping the footer content in a container with more consistent padding.
    - Improve alignment on smaller screens to ensure that text doesn't overflow or get misaligned. */

footer h5 {
    text-align: left;
    padding: 20px;
}

/* ### Recommended Improvements to Make CSS More Responsive:

- Add media queries for different breakpoints (e.g., mobile, tablet). A good starting point might be:
    
    @media (max-width: 768px) {
      .navigation-bar ul {
        flex-direction: column;
        align-items: center;
      }
    
      .hero {
        height: auto;
      }
    
      .section-locations {
        flex-direction: column;
        align-items: stretch;
      }
    
      .location {
        width: 100%;
        margin: 10px 0;
      }
    }

- This will ensure that your design is responsive and works across various devices. */